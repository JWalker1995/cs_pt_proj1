init 0 255 _ error
init 48 57 _ integer // number
init 65 90 _ identifier // upper
init 97 122 _ identifier // lower
init d _ keyword_d
init i _ keyword_i
init p _ keyword_p
init r _ keyword_r
init s _ keyword_s
init v _ keyword_v
init w _ keyword_w

integer
integer 48 57 _ integer

keyword_d 65 90 _ identifier
keyword_d 97 122 _ identifier
keyword_d e _ keyword_de

keyword_de 65 90 _ identifier
keyword_de 97 122 _ identifier
keyword_de c _ keyword_dec

keyword_dec 65 90 _ identifier
keyword_dec 97 122 _ identifier
keyword_dec i _ keyword_deci

keyword_deci 65 90 _ identifier
keyword_deci 97 122 _ identifier
keyword_deci s _ keyword_decis

keyword_decis 65 90 _ identifier
keyword_decis 97 122 _ identifier
keyword_decis i _ keyword_decisi

keyword_decisi 65 90 _ identifier
keyword_decisi 97 122 _ identifier
keyword_decisi o _ keyword_decisio

keyword_decisio 65 90 _ identifier
keyword_decisio 97 122 _ identifier
keyword_decisio n decisionTok init

keyword_i 65 90 _ identifier
keyword_i 97 122 _ identifier
keyword_i n _ keyword_in

keyword_in 65 90 _ identifier
keyword_in 97 122 _ identifier
keyword_in t intTok init

keyword_p 65 90 _ identifier
keyword_p 97 122 _ identifier
keyword_p r _ keyword_pr

keyword_pr 65 90 _ identifier
keyword_pr 97 122 _ identifier
keyword_pr i _ keyword_pri

keyword_pri 65 90 _ identifier
keyword_pri 97 122 _ identifier
keyword_pri n _ keyword_prin

keyword_prin 65 90 _ identifier
keyword_prin 97 122 _ identifier
keyword_prin t printTok init

keyword_pro 65 90 _ identifier
keyword_pro 97 122 _ identifier
keyword_pro g _ keyword_prog

keyword_prog 65 90 _ identifier
keyword_prog 97 122 _ identifier
keyword_prog r _ keyword_progr

keyword_progr 65 90 _ identifier
keyword_progr 97 122 _ identifier
keyword_progr a _ keyword_progra

keyword_progra 65 90 _ identifier
keyword_progra 97 122 _ identifier
keyword_progra m programTok init

keyword_r 65 90 _ identifier
keyword_r 97 122 _ identifier
keyword_r e _ keyword_re

keyword_re 65 90 _ identifier
keyword_re 97 122 _ identifier
keyword_re a _ keyword_rea

keyword_rea 65 90 _ identifier
keyword_rea 97 122 _ identifier
keyword_rea d readTok init

keyword_ret 65 90 _ identifier
keyword_ret 97 122 _ identifier
keyword_ret u _ keyword_retu

keyword_retu 65 90 _ identifier
keyword_retu 97 122 _ identifier
keyword_retu r _ keyword_retur

keyword_retur 65 90 _ identifier
keyword_retur 97 122 _ identifier
keyword_retur n returnTok init

keyword_s 65 90 _ identifier
keyword_s 97 122 _ identifier
keyword_s t _ keyword_st

keyword_st 65 90 _ identifier
keyword_st 97 122 _ identifier
keyword_st a _ keyword_sta
keyword_st o _ keyword_sto

keyword_sta 65 90 _ identifier
keyword_sta 97 122 _ identifier
keyword_sta r _ keyword_star

keyword_star 65 90 _ identifier
keyword_star 97 122 _ identifier
keyword_star t startTok keyword_start

keyword_sto 65 90 _ identifier
keyword_sto 97 122 _ identifier
keyword_sto p stopTok init

keyword_v 65 90 _ identifier
keyword_v 97 122 _ identifier
keyword_v o _ keyword_vo

keyword_vo 65 90 _ identifier
keyword_vo 97 122 _ identifier
keyword_vo i _ keyword_voi

keyword_voi 65 90 _ identifier
keyword_voi 97 122 _ identifier
keyword_voi d voidTok init

keyword_w 65 90 _ identifier
keyword_w 97 122 _ identifier
keyword_w h _ keyword_wh

keyword_wh 65 90 _ identifier
keyword_wh 97 122 _ identifier
keyword_wh i _ keyword_whi

keyword_whi 65 90 _ identifier
keyword_whi 97 122 _ identifier
keyword_whi l _ keyword_whil

keyword_whil 65 90 _ identifier
keyword_whil 97 122 _ identifier
keyword_whil e whileTok init



id 0 255 idTok init


id 12 34 idTok id




All case sensitive
Alphabet
    all English letters (upper and lower), digits, plus the extra characters as seen below, plus WS
    No other characters allowed and they should generate lexical errors
        Each scanner error should display "Scanner Error:" followed by details.
Identifiers
    begin with a letter and
    continue with any number of letters
    you may assume no identifier is longer than 8
Keywords (reserved, suggested individual tokens)
    start stop decision while void int return read print program
Operators delimiters etc.
    =  <<  >>  =!  == :  +  -  *  / & %  . (  ) , { } ; [ ]
Integers
    any sequence of decimal digits, no sign
    you may assume no number longer than 8 digits
Comments start with # and end with WS
